{
    "name": "module-airdrop-claim-module",
    "license": "MIT",
    "version": "0.0.1",
    "dependencies": {
        "@prb/math": "^4.0.2",
        "@rhinestone/modulekit": "^0.3.6",
        "@safe-global/safe-contracts": "1.4.1-build.0",
        "erc4337-validation": "github:rhinestonewtf/erc4337-validation"
    },
    "devDependencies": {
        "@ERC4337/account-abstraction": "github:kopy-kat/account-abstraction#develop",
        "@ERC4337/account-abstraction-v0.6": "github:eth-infinitism/account-abstraction#v0.6.0",
        "@openzeppelin/contracts": "5.0.1",
        "ds-test": "github:dapphub/ds-test",
        "erc7579": "github:erc7579/erc7579-implementation",
        "forge-std": "github:foundry-rs/forge-std",
        "prettier": "^2.8.8",
        "sentinellist": "github:zeroknots/sentinellist",
        "solady": "github:vectorized/solady",
        "solarray": "github:sablier-labs/solarray",
        "solhint": "^4.1.1",
        "solmate": "github:transmissions11/solmate"
    },
    "files": [
        "src",
        "test",
        "script"
    ],
    "keywords": [
        "blockchain",
        "ethereum",
        "foundry",
        "smart-contracts",
        "solidity",
        "web3"
    ],
    "scripts": {
        "build": "forge build",
        "build:optimized": "FOUNDRY_PROFILE=optimized forge build",
        "build:smt": "FOUNDRY_PROFILE=smt forge build",
        "clean": "rm -rf artifacts broadcast cache docs out out-optimized out-svg",
        "gas:report": "forge test --gas-report --mp \"./test/integration/**/*.sol\" --nmt \"test(Fuzz)?_RevertWhen_\\w{1,}?\"",
        "gas:snapshot": "forge snapshot --mp \"./test/integration/**/*.sol\" --nmt \"test(Fuzz)?_RevertWhen_\\w{1,}?\"",
        "gas:snapshot:optimized": "bun run build:optimized && FOUNDRY_PROFILE=test-optimized forge snapshot --mp \"./test/integration/**/*.sol\" --nmt \"test(Fork)?(Fuzz)?_RevertWhen_\\w{1,}?\"",
        "lint": "bun run lint:sol && bun run prettier:check",
        "lint:sol": "forge fmt --check && bun solhint \"{script,src,test}/**/*.sol\"",
        "prepack": "bun install && bash ./shell/prepare-artifacts.sh",
        "prettier:check": "prettier --check \"**/*.{json,md,svg,yml}\"",
        "prettier:write": "prettier --write \"**/*.{json,md,svg,yml}\"",
        "test": "forge test",
        "test:lite": "FOUNDRY_PROFILE=lite forge test",
        "test:optimized": "bun run build:optimized && FOUNDRY_PROFILE=test-optimized forge test"
    }
}
